


INtroduction à GIT 

Git est un logiciel de gestion de versions décentralisé. C'est un logiciel libre et gratuit, créé en 2005 par Linus Torvalds, auteur du noyau Linux, et distribué selon les termes de la licence publique générale GNU version 2. Le principal contributeur actuel de Git, et ce depuis plus de 16 ans, est Junio C Hamano.

Depuis les années 2010, il s’agit du logiciel de gestion de versions le plus populaire dans le développement logiciel et web, qui est utilisé par des dizaines de millions de personnes, sur tous les environnements (Windows, Mac, Linux)3. Git est aussi le système à la base du célèbre site web GitHub, le plus important hébergeur de code informatique.


A retenir : 

Git est un logiciel de versioning.
Git va sauvegarder vos fichiers sous des versions différentes.

Pour crée une version on utilise GIT (en local) et pour sauvegarder nos versions en ligne on utilise (Github).

Basic Git Commands : 

------------------------
Git Configurations 
------------------------

git config --global user.name "username"
git config --global user.email "votreemail@gmail.com"
git config --list
git blame

----------------------------
Git création d'un repository
----------------------------

git init               (Initialiser un repository git)
git status             (voir l'état des fichiers)

------------------------------
Git mise en scène des fichiers
------------------------------ 

git add (nom du fichier / *.html / .)

------------------------
Git création d'un commit
------------------------

git commit -m "votre message"
git commit -am "votre message"
git reset <commit>
git revert <commit>

------------------------
Git pull & push 
------------------------

git remote add origin <link>       (crée un remote)
git push                           (envoi les fichiers sur github) 
git pull                           (récupère les fichiers sur github)

------------------------
Git branch
------------------------

git branch                          (list les branch)
git branch <name>                   (crée une branch)
git branch checkout <name>          (se déplace sur la branch)
git merge <name>                    (fusionne la branch)
git checkout -b <name>              (raccourci pour créer et se déplacer sur la branch)

------------------------
Git clone 
------------------------

git clone <link>




Exercice 1 : 

Crée un nouveau projet 
Initialiser Git
Crée des fichiers 
Fait des mises en scène 
Faire des commits


Exercice 2 : 

Créer un dépot distant sur GITHUB 
Créer le remote en local 
Faire un git push


Exercice3 : 

Créer une branche
Vous vous placer sur la branche 
Vous développer 
Faire des sauvegarde 
Faire des push 
Sur GITHUB vous faite des pullrequests


Exercice Groupe : 

Création d'un blog en HTML / CSS 
1 Homepage 1 page contact 1 page détail d'un article 1 Qui sommes nous 


Un personne du groupe qui crée le projet 
Git init 
Créer un repo distant 
Ajoute son remote 
et push 

les autres membres du groupes font un clone 
et chaque membre travail sur sa branch 